#!/usr/bin/env bash

set -o errexit
set -x

# Load utils
source %{util_script}

# Resolve the docker tool path
DOCKER="docker"
DOCKER_FLAGS=""

if [[ -z "$DOCKER" ]]; then
    echo >&2 "error: docker not found; do you need to manually configure the docker toolchain?"
    exit 1
fi

##### cleanup: clear intermediate stuff on exit ############
cleanup() {
  rv=$?
  rm $OUTPUT_IMAGE_TAR || true
  "$DOCKER" $DOCKER_FLAGS rm $id || true
  "$DOCKER" $DOCKER_FLAGS rmi %{output_image} || true
  exit $rv
}
trap cleanup EXIT
##### end: cleanup: clear intermediate stuff ###############

# Load the image and remember its name
image_id=$(%{image_id_extractor_path} %{image_tar})
"$DOCKER" $DOCKER_FLAGS load -i %{image_tar}

readonly id=$("$DOCKER" $DOCKER_FLAGS create --env-file %{env_file_path} $image_id %{commands})
"$DOCKER" $DOCKER_FLAGS start -a "${id}"
OUTPUT_IMAGE_TAR="%{output_layer_tar}.image.tar"
reset_cmd $image_id $id %{output_image}
"$DOCKER" $DOCKER_FLAGS save %{output_image} -o $OUTPUT_IMAGE_TAR

# Extract the last layer from the image - this will be the layer generated by "$DOCKER" commit
%{image_last_layer_extractor_path} $OUTPUT_IMAGE_TAR %{output_layer_tar} %{output_diff_id}

